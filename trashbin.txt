
      <Button
     
 
   color="#FFF"
        width="244px"
        height="52px"
        display="inline-flex"
        border="1px solid #DEDEDE"
        alignItems="center"
        padding="0px 30px 0px 35px"
        borderRadius="50px"
        fontSize="16px"
        gap="5px"
        mt="38px"
        bg="#FFF"
        justifyContent="center"
      >
        <Img
          src="images/02.svg"
          borderRadius="full"
          border="1px solid #DEDEDE"
          width='44px'
          height='44px'
          boxSize="42px"
          mr="2px"
        />{" "}
        {/* Assuming 02.svg is the image */}
        <Text
          color="black"
          border="1px solid #DEDEDE"
          borderRadius="14px"
          alignItems="center"
          padding="10px 28px"
        >
          My Portfolio
          <Icon as={MdKeyboardArrowDown} color="black" />
        </Text>
      </Button>
 

    </Box>
 
   color="#FFF"
        width="244px"
        height="52px"
        display="inline-flex"
        border="1px solid #DEDEDE"
        alignItems="center"
        padding="0px 30px 0px 35px"
        borderRadius="50px"
        fontSize="16px"
        gap="5px"
        mt="38px"
        bg="#FFF"
        justifyContent="center"
      >
        <Img
          src="images/02.svg"
          borderRadius="full"
          border="1px solid #DEDEDE"
          width='44px'
          height='44px'
          boxSize="42px"
          mr="2px"
        />{" "}
        {/* Assuming 02.svg is the image */}
        <Text
          color="black"
          border="1px solid #DEDEDE"
          borderRadius="14px"
          alignItems="center"
          padding="10px 28px"
        >
          My Portfolio
          <Icon as={MdKeyboardArrowDown} color="black" />
        </Text>
      </Button>
 
justifyItems="center"
 

          alignItems="center"
 

          justifyContent="center"
 

          gap="10px"
 

          justifyContent="center"
 
black
 

        display="inline-flex"
 
<Button
      color="#FFF"
      width="244px"
      height="52px"
      display="flex"
      border="1px solid #DEDEDE"
      alignItems="center"
      padding="0px 30px 0px 35px"
      borderRadius="50px"
      fontSize="16px"
      gap="15px"
      mt="38px"
      bg="#FFF"
      justifyContent="center"
    >
      <Img src="images/02.svg" borderRadius="full" border="1px solid black" boxSize="40px" mr="5px" /> {/* Assuming 02.svg is the image */}
      <Text color='black' >
      My Portfolio <Icon as={MdKeyboardArrowDown }/>
      </Text>
    </Button>
 
<Button
      color="#FFF"
      width="244px"
      height="52px"
      display="flex"
      border="1px solid #DEDEDE"
      alignItems="center"
      padding="0px 30px 0px 35px"
      borderRadius="50px"
      fontSize="16px"
      gap="15px"
      mt="38px"
      bg="#FFF"
      justifyContent="center"
    >
      <Img src="images/02.svg" borderRadius="full" border="1px solid black" boxSize="40px" mr="5px" /> {/* Assuming 02.svg is the image */}
      <Text color='black' >
      My Portfolio <Icon as={MdKeyboardArrowDown }/>
      </Text>
    </Button>
 

      _hover={{
        color: "#000", // Black text color on hover
        bg: "#FFF", // White background color on hover
      }}
 
<Button
        color="#FFF"
        width="150px"
        height="41px"
        display="flex"
        border="1px solid #DEDEDE"
        alignItems="center"
        padding="0px 30px 0px 35px"
        borderRadius="6px"
        fontSize="16px"
        mt="38px"
        bg="#4159B1"
        justifyContent="center"
        _hover={{
          color: "#000", // Black text color on hover
          bg: "#FFF", // White background color on hover
        }}
      >
      <Img src="images\02.svg"/>
        My Portfolio
      </Button>
 
Add Traders
 

      </Box>
 

      <Box >
 
%borderRadius="50"
 
D:\07.Git\29.Crypto new project\bg-project-react
 
 color="#FFF"
        width="150px"
        height="41px"
        display="flex"
        border="1px solid #DEDEDE"
        alignItems="center"
        padding="0px 30px 0px 35px"
        borderRadius="6px"
        fontSize="16px"
        mt="38px"
        bg="#4159B1"
        justifyContent="center"
 

    </Container>
 

    <Container width="19">
 
<Button
      color="#FFF"
      width="150px"
      height="41px"
      display="flex"
      border="1px solid #DEDEDE"
      alignItems="center"
      padding="0px 30px 0px 35px"
      borderRadius="6px"
      fontSize="16px"
      mt="38px"
      bg="#4159B1"
      justifyContent="center"
      _hover={{
        color: '#000', // Black color on hover
      }}
    >
 
color="#FFF"
        width="150px" // Adjust width as needed
        height="41px" // Adjust height as needed
        display="flex"
        border="1px solid #DEDEDE"
        alignItems="center"
        padding="0px 30px 0px 35px"
        borderRadius="6px"
        fontSize="16px"
        mt="38px"
        bg="#4159B1"
        justifyContent="center"
      >
 
     <Button
        color="#FFF"
        width="150px" // Adjust width as needed
        height="41px" // Adjust height as needed
        display="flex"
        border="1px solid #DEDEDE"
        alignItems="center"
        padding="0px 30px 0px 35px"
        borderRadius="6px"
        fontSize="16px"
        mt="38px"
        bg="#4159B1"
        justifyContent="center"
      >
        Add Traders
      </Button>
 
#8798AD;
 
 color="black"
 

      justifyContent="space-around" >
 

      display="flex"
 

      gap="10px"
 

      borderRadius="10px"
 

      mt="38px"
 

      fontSize="16px"
      padding="10px 0px 10px 10px" 
 
import { Flex, Box, Button, HStack, Icon, Text, Container } from "@chakra-ui/react";
import React from "react";
import { HiPlusCircle } from "react-icons/hi";

function TopNav() {
  const buttons = [
    {
      text: "Symbol",
    },
    {
      text: "Setup",
    },
    {
      text: "Side",
    },
    {
      icon: HiPlusCircle,
      text: "Add",
    },
  ];
  return (
        <Box
      width="403px"
      height="52px"
      borderRadius="10px"
      border="1px solid #DEDEDE"
      mt="38px"
      gap="10px"
      bg="#FFF;"
      display="flex"
      alignItems="center"
      justifyContent="space-around"
      fontSize="16px"
      padding="10px 0px 10px 10px"  
    >
      {buttons.slice(0, 3).map((button, index) => (
        <Button
          key={index}
          color="#8798AD;"
          width="100px"  // Adjust width as needed
          height="40px"  // Adjust height as needed
          display="flex"
          border="1px solid #DEDEDE"
          alignItems="center"
          fontSize="16px"
          bg="#fff"
          justifyContent="center"
        >
          <Text fontSize="16px" fontWeight="normal">{button.text}</Text>
        </Button>
      ))}
      <Text
      display="flex"
      width="100px"
      height="50px"
      padding="14px 20.555px"
      justifyContent="center"
      alignItems="center"
      borderLeft="1px solid #DEDEDE"
      background="#FFF"
      gap="5px"
      boxShadow="-1px 0px 10px 0px rgba(0, 0, 0, 0.10)"
      borderRadius="0px 10px 10px 0px"
      fontSize="16px"
      cursor="pointer"
      color="#8798AD"
    >
    <Icon as={buttons.icon}/>
      {buttons[3].text}
    </Text>
    </Box>
  );
}

export default TopNav;

 

    </Container>
 

    <Container>
 

    <Container>
 

    </Container>
 

          color="rgba(249, 186, 51, 1)"
 
FiPlusCircle
 

import { FiPlusCircle } from "react-icons/fi";
 
CiCirclePlus
 

import { CiCirclePlus } from "react-icons/ci";
 

import { CiCirclePlus } from "react-icons/ci";
 

      pad
 

      borrd
 

      <Box>
      {buttons.slice(2, 3).map((button, index) => (
          <Text fontSize="16px" border="2px ">{button.text}</Text>
      ))}
      </Box>
 

        </Button>
 

        <Button
        padding='0'
          key={index}
          color="rgba(249, 186, 51, 1)"
          width="100px"  // Adjust width as needed
          height="40px"  // Adjust height as needed
          display="flex"
          border="1px solid #DEDEDE"
          alignItems="center"
          bg="#FFF;"
          justifyContent="center"
        >
 
<Button
          key={index}
          color="rgba(249, 186, 51, 1)"
          width="100px"
          height="52px"
          display="flex"
          alignItems="center"
          justifyContent="center"
          padding="14px 20.555px"
          borderLeft="1px solid #DEDEDE"
          background="#FFF"
          boxShadow="-1px 0px 10px 0px rgba(0, 0, 0, 0.10)"
          borderTopLeftRadius={index === 0 ? "0" : "md"}
          borderBottomLeftRadius={index === 0 ? "0" : "md"}
          borderTopRightRadius={index === buttons.slice(0, 3).length - 1 ? "md" : "0"}
          borderBottomRightRadius={index === buttons.slice(0, 3).length - 1 ? "md" : "0"}
        >
 
<Button
          key={index}
          color="rgba(249, 186, 51, 1)"
          width="100px"
          height="52px"
          display="flex"
          alignItems="center"
          justifyContent="center"
          padding="14px 20.555px"
          borderLeft="1px solid #DEDEDE"
          background="#FFF"
          boxShadow="-1px 0px 10px 0px rgba(0, 0, 0, 0.10)"
          borderTopLeftRadius={index === 0 ? "0" : "md"}
          borderBottomLeftRadius={index === 0 ? "0" : "md"}
        >
 
 <Button
          key={index}
          color="rgba(249, 186, 51, 1)"
          width="100px"  // Adjust width as needed
          height="40px"  // Adjust height as needed
          display="flex"
          border="1px solid #DEDEDE"
          alignItems="center"
          bg="#FFF"
          justifyContent="center"
          borderTopLeftRadius={index === 0 ? "0" : "md"}
          borderBottomLeftRadius={index === 0 ? "0" : "md"}
          padding="0"
        >
 
<Button
          key={index}
          color="rgba(249, 186, 51, 1)"
          width="100px"  // Adjust width as needed
          height="40px"  // Adjust height as needed
          display="flex"
          border="1px solid #DEDEDE"
          alignItems="center"
          bg="#FFF;"
          justifyContent="center"
        >
 

        borderRadius=""
 

          border="1px solid #DEDEDE"
 

          borderRadius:""
 
background:
 
1px solid black
 

      borderRadius="8px"
 

      bg="gray"
 

      bg="gray"
 
// Add padding if needed
 

          justifyContent="center"
 

          justifyContent="center
 

          alignItems="center"
 
 fontWeight=""
 

    <Box
    width="403px"
    height="52px"
    borderRadius="10px"
    bg="gray"
    mt="38px"
    display="flex"
    alignItems="center"
    justifyContent="space-around"
  >
    {buttons.slice(0, 2).map((button, index) => (
      <Button
        key={index}
        color="rgba(249, 186, 51, 1)"
        width="100px"  // Adjust width as needed
        height="40px" // Adjust height as needed
      >
        <Text>{button.text}</Text>
      </Button>
    ))}
  </Box>
 

        width="100px"  // Adjust width as needed
 

    <Box
      width="403px"
      height="52px"
      borderRadius="10px"
      bg="gray"
      mt="38px"
      display="flex"
    >
      {buttons.slice(0, 3).map((button) => (
        <HStack
          width="10%"
          display="flex"    
        >
          {button.text && (
            <>
              <Button
                color="rgba(249, 186, 51, 1)"
                width="20px"
                height="24px"
                as={button.text}
              >
                <Text>{button.text}</Text>
              </Button>
            </>
          )}
        </HStack>
      ))}
    </Box>
 

          width="100%"
 

          width="100%"
          display="flex"  
 

      display="flex"
 

          display="flex"
 

          display="flex"
 

          width="100%"
 

          alignItems="center"
 

          borderRadius="10px"
 

          mx="12px"
 

          py="15px"
          px="40px"
 

          gap="18px"
 

          key={nav.text}
 

              display="flex"
 

                <Text fontWeight="400" fontSize="19px">
                  {nav.text}
                </Text>
 

                  <Icon
                    color="rgba(249, 186, 51, 1)"
                    width="20px"
                    height="24px"
                    as={nav.icon}
                  />
                )}
 

                color="#0a2351"
 

                }}
 

                mx="12px"
                key={nav.text}
                py="15px"
                px="40px"
                width="100%"
                borderRadius="10px"
                display="flex"
                alignItems="center"
                gap="18px"
                display="flex"
                _hover={{
                  bg: "#F3F3F7",
                  width: "90%",
                  color: "#171717",
 
{
    buttons.slice(0,2).map((button, index) =>
    )
  }
 
{
    buttons.slice(0,2).map((button, index) =>
    )
  }
 

    <Button></Button>
 

  <Button></Button>
 

    hello
 

        text:""
 

    <Flex>
      
    </Flex>
 

              color="#797E82"
 
#0D163A
 
#797E82
 

              py="10px"
 
textColor
 
mx="45px"
 

                width:"110%",
                alignItems:"center"
 

            mt="5px"
 

              height="64px"
              width="258px"
 

              flex-shrink="0"
 

            <HStack
 

              mx="12px"
              key={nav.text}
              spacing={4}
              height="64px"
              height="24px"
              width="24px"
 
px="4"
 
alignItems="center"
 
alignItems="center"
 
textAlign="center"
 
Your Heading
 
/public/images/logo.svg
 
path_to_your_image.jpg
 
 <Im></Im>
 
4px 0px 12px 0px
 
rgba(0, 0, 0, 0.10)
 
boxShadow="sm"
 
boxShadow="sm"
 
// theme.js
import { extendTheme } from "@chakra-ui/react";

export const theme = extendTheme({
    fonts: {
        heading: 'Ubuntu',
        body: 'Ubuntu',
    },
    styles: {
        global: {
            "html, body": {
                backgroundColor: "white", // Set the default background color to white
            },
        },
    },
});

 
import { background, extendBaseTheme } from "@chakra-ui/react";

export const theme=extendBaseTheme({
    fonts:{
        heading:'Ubuntu',
        body:'Ubuuntu',
    }
}) 
 

      </Box>
 

      <Box bg="black">
 
theme={theme}
 
body{
    background: #000;
}
 
body{
    background: #000;
}
 
<Icon src={journalIcon} alt="Journal Icon" boxSize="1.5em" />
 

import journalIcon from '../assest/images/journal.svg'
 
<Icon as={journalIcon} />,
 
alt="Journal Icon" 
 

importjournalIcon} from '../../public/images/journal.svg' 
 
} alt="Journal Icon"
 
src={
 
src="public/images/journal.svg"
 
import { HStack, Icon,  Stack,Text } from "@chakra-ui/react";
import { MdDashboard } from "react-icons/md";
import { TbReportAnalytics } from "react-icons/tb";
import { SlCalender } from "react-icons/sl";
import { MdOutlineSettings } from "react-icons/md";
import { RiAccountPinCircleFill } from "react-icons/ri";
import { MdOutlineHelpCenter } from "react-icons/md";
import { RiLogoutBoxRLine } from "react-icons/ri";
import React from "react";

function SideNav() {
  const navLinks = [
    {
      icon: MdDashboard,
      text: "Dashboard",
      link: "/",
    },
    {
      // icon: <Img srs="public/images/journal.svg"></Img>,
      text: "Journal",
      link: "/journal",
    },
    {
      icon: TbReportAnalytics,
      text: "Reports",
      link: "/reports",
    },
    {
      icon: SlCalender,
      text: "Calendar",
      link: "/calendar",
    },
    {
      icon: MdOutlineSettings,
      text: "Configuration",
      link: "/configuration",
    },
    {
      icon: MdOutlineSettings,
      text: "Configuration",
      link: "/configuration",
    },
    {
      icon: RiAccountPinCircleFill,
      text: "Account",
      link: "/account",
    },
    {
      icon: MdOutlineHelpCenter,
      text: "Help",
      link: "/help",
    },
    {
      icon: RiLogoutBoxRLine,
      text: "Log Out",
      link: "/log Out",
    },
  ];
  return (
    <div>
    <Stack>
    {
      navLinks.map((nav)=>{
        <HStack key={nav.text}>
        <Icon as={nav.icon}/>
        <Text>{nav.text}</Text>
        </HStack>
      })
    }
    </Stack>
    </div>
  );
}

export default SideNav;

 

import Sidenav from '../../components/Sidenav'
 

    <Sidenav />
 

    <Dashboard />
 
Box, 
 
Img,
 
import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import { ChakraProvider } from '@chakra-ui/react';
import { theme } from './theme';
import '@fontsource/ubuntu';
import { BrowserRouter as Router } from 'react-router-dom'; // Import BrowserRouter

ReactDOM.render(
  <React.StrictMode>
    <Router> {/* Wrap your App component with BrowserRouter */}
      <ChakraProvider theme={theme}>
        <App />
      </ChakraProvider>
    </Router>
  </React.StrictMode>,
  document.getElementById('root')
);

reportWebVitals();

 

      <Signup />
 

      <Box>sidenav</Box>
 
MdOutlineHelpCenter
 
help
 
Help
 
RiAccountPinCircleFill
 
Account
 
MdOutlineSettings
 
configuration
 
Configuration
 
SlCalender
 
calendar
 
Calendar
 
TbReportAnalytics
 
reports
 
Reports
 
 ></Img>,
 
<Img srs="public/images/journal.svg"
 

import
import 
 
MdDashboard
 
Dashboard
 

import SideNav from '../../components/SideNav'
 

import Sidenav from '../../components/Sidenav'
 
mport React from 'react'

function SideNav() {
  return (
    <div>
      
    </div>
  )
}

export default SideNav
 
import React from "react";

function Sidenav() {
  return(
    
  <Box></Box>
  )
}
export default Sidenav;
 


 
<div>sidenav</div>;
 

      Dashboard
 
SideNav
 
Dashboard
 
Dashboard
 

import Sign
 

import Signup from "./auth/signup/Signup";
 

// import { Link } from "react-router-dom";

 


// const signupValidationSchema = object({
//   name: string().required("Name is required"),
//   username: string().required("Surname is required"),
//   email: string().email("Email is invalid").required("Email is required"),
//   password: string()
//     .min(6, "Password must be at least 6 characters")
//     .required("Password is required"),
// });
 

// import { object, string } from "yup";
 
